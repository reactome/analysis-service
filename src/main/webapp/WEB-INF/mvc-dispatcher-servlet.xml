<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="org.reactome.server.graph"/>
    <context:component-scan base-package="org.reactome.server.analysis.core.methods"/>
    <context:component-scan base-package="org.reactome.server.analysis.service.controller"/>
    <context:component-scan base-package="org.reactome.server.analysis.service.entrypoint"/>
    <context:component-scan base-package="org.reactome.server.analysis.service.utils"/>

    <!-- Standard xml based mvc config-->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="serializationInclusion">
                            <value>NON_NULL</value>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <context:property-placeholder location="classpath:/analysis.properties" />

    <mvc:resources mapping="/**" location="/resources/" />

    <!-- Enables swgger ui-->
    <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/"/>
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="52428800"/> <!-- 10485760 = 10 MB  // 52428800 = 50 MB-->
    </bean>

    <bean class= "org.reactome.server.analysis.service.handler.HandlerExceptionResolverImpl" />

    <bean id="analysisData" class="org.reactome.server.analysis.core.data.AnalysisData" destroy-method="interrupt">
        <property name="fileName" value="${analysis.data.file}"/>
    </bean>

    <bean class="org.reactome.server.analysis.service.helper.AnalysisHelper"/>

    <bean class="org.reactome.server.analysis.service.helper.DownloadHelper"/>

    <bean class="org.reactome.server.analysis.core.result.utils.ExternalAnalysisResultCheck" />

    <bean id="fileCheckerController" class="org.reactome.server.analysis.service.helper.FileCheckerController" name="FileCheckerController" destroy-method="interrupt">
        <property name="pathDirectory" value="${analysis.data.tmp}"/>
        <property name="maxSize" value="2684354560"/> <!-- 2684354560 = 2.5 GB // 5368709120 = 5 GB // 10737418240 = 10 GB -->
        <property name="threshold" value="524288000"/> <!-- 10485760 = 10MB // 524288000 = 500MB // 1073741824 = 1GB -->
        <property name="time" value="10000"/> <!-- 10 sec -->
        <property name="ttl" value="604800000"/> <!-- 1 week (SAB suggestion) -->
    </bean>

    <bean id="tokenUtils" class="org.reactome.server.analysis.core.result.utils.TokenUtils">
        <property name="pathDirectory" value="${analysis.data.tmp}"/>
    </bean>

    <bean class="org.reactome.server.analysis.service.handler.FileDeletorScheduler"/>

    <!-- Creates a controller at /api-docs from this uri, which serves swagger's raw documentation in JSON format. -->
    <bean name="/applicationSwaggerConfig" class="org.reactome.server.analysis.service.swagger.AnalysisServiceSwaggerConfig" />

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.host}" />
        <property name="port" value="${mail.port}" />
        <property name="username" value="${mail.username}" />
        <property name="password" value="${mail.password}" />

        <!-- The name of the property, following JavaBean naming conventions -->
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">${mail.enable.auth}</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">false</prop>
            </props>
        </property>
    </bean>

    <bean id="graphCore" class="org.reactome.server.analysis.service.utils.ReactomeGraphConfig">
        <constructor-arg name="host" value="${neo4j.host}"/>
        <constructor-arg name="port" value="${neo4j.port}"/>
        <constructor-arg name="user" value="${neo4j.user}"/>
        <constructor-arg name="password" value="${neo4j.password}"/>
    </bean>

    <bean id="analysisReport" class="org.reactome.server.tools.analysis.report.AnalysisReport" depends-on="graphCore">
        <constructor-arg name="diagramPath" value="${diagram.json.folder}"/>
        <constructor-arg name="ehldPath" value="${ehld.folder}"/>
        <constructor-arg name="fireworksPath" value="${fireworks.json.folder}"/>
        <constructor-arg name="analysisPath" value="${analysis.data.tmp}"/>
        <constructor-arg name="svgSummary" value="${svg.summary.file}"/>
    </bean>
</beans>